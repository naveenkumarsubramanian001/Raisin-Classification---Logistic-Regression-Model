# -*- coding: utf-8 -*-
"""Raisin Classification - Logistic Regression Model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XUkzx6Lh3rE1AQo5TcBruJCM6jKIicr4
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import LabelEncoder

"""# New Section"""

raisin_data = pd.read_csv('/content/Raisin_Dataset.csv')
print(raisin_data.head())
print(raisin_data.shape)

raisin_data.isnull().isnull().sum()

raisin_data['Class'].value_counts()

label = LabelEncoder()
raisin_data['Class'] = label.fit_transform(raisin_data['Class'])
print(raisin_data['Class'])

X = raisin_data.drop(columns='Class', axis= 1)
Y = raisin_data['Class']

print(X)
print(Y)

X_train, X_test, Y_train , Y_test = train_test_split(X,Y, test_size=0.1,random_state=2)

print(X.shape , X_train.shape, Y_train.shape )

model = LogisticRegression()

model.fit(X_train ,Y_train)

X_train_pred = model.predict(X_train)

train_accuracy = accuracy_score(X_train_pred, Y_train)

print(train_accuracy)

X_test_pred = model.predict(X_test)

test_accuracy = accuracy_score(X_test_pred, Y_test)

print(test_accuracy)

input= (208264,675.0983445,395.5792906,0.810341407,212813,0.771748314,1755.167)
input_data = np.asarray(input)
input_reshaped = input_data.reshape(1,-1)
value = model.predict(input_reshaped)
print(value)

if (value==1):
  print('kecimen')
else:
  print('besni')

